装饰期模式：

定义：
向一个现有的对象添加新的功能，同时不改变其结构。它是作为现有类的一个包装。

一般情况：
一般的，在扩展一个类时，经常使用继承的方式，由于继承为类引入静态特征，并且随着功能的扩展，子类会很膨胀。

目的：
在不增加子类的情况下扩展类，动态的为此对象添加额外的职责(可以在不使用创造更多子类的情况下，将对象的功能加以扩展)。

角色：
1.抽象构件(Component)角色：给出一个抽象接口，以规范准备接收附加责任的对象

2.具体构件(ConcreteComponent)角色：定义一个将要接收附加责任的类。

3.装饰(Decorator)角色：持有一个构件(Component)对象的实例，并定义一个与抽象构件接口一致的接口。

4.具体装饰(ConcreteDecorator)角色：负责给构件对象"贴上"附加的责任。

类图：
参见decorator.png

网址：
https://blog.csdn.net/zhshulin/article/details/38665187
视频：
http://www.voidcn.com/article/p-zenxvigi-yg.html
http://www.icoolxue.com/play/5525
